"use strict";(self.webpackChunkzkbnb_docs=self.webpackChunkzkbnb_docs||[]).push([[4867],{52042:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>c,default:()=>x,frontMatter:()=>m,metadata:()=>u,toc:()=>y});var a=n(87462),i=(n(67294),n(3905)),s=n(26389),d=n(94891),o=(n(75190),n(47507)),p=n(24310),r=n(63303),l=(n(75035),n(85162));const m={id:"update-nft-by-index",title:"update nft metadata by nft_index",description:"update nft metadata by nft_index",sidebar_label:"update nft metadata by nft_index",hide_title:!0,hide_table_of_contents:!0,api:{tags:["NFT"],operationId:"UpdateNftByIndex",requestBody:{description:"NFT updating request parameter.",content:{"application/json":{schema:{title:"ReqUpdateNft",required:["tx_info"],type:"object",properties:{tx_info:{type:"string"}}}}},required:!0},responses:{200:{description:"A successful response.",content:{"application/json":{schema:{title:"History",required:["ipns_id"],type:"object",properties:{code:{type:"integer",format:"int32"},message:{type:"string"},ipns_id:{type:"string"}}}}}}},"x-codegen-request-body-name":"body",description:"update nft metadata by nft_index",extensions:[{key:"x-codegen-request-body-name",value:"body"}],method:"post",path:"/api/v1/updateNftByIndex",servers:[{url:"https://testapi.zkbnbchain.org/"}],jsonRequestBodyExample:{tx_info:"string"},info:{title:"ZKBNB API Document",description:"Public APIs for zkbnb",version:"1.0"},postman:{name:"update nft metadata by nft_index",description:{type:"text/plain"},url:{path:["api","v1","updateNftByIndex"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/zkbnb/zkbnb-api-document",custom_edit_url:null},c=void 0,u={unversionedId:"zkbnb/update-nft-by-index",id:"zkbnb/update-nft-by-index",title:"update nft metadata by nft_index",description:"update nft metadata by nft_index",source:"@site/docs/zkbnb/update-nft-by-index.api.mdx",sourceDirName:"zkbnb",slug:"/zkbnb/update-nft-by-index",permalink:"/zkbnb-docs/docs/zkbnb/update-nft-by-index",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"update-nft-by-index",title:"update nft metadata by nft_index",description:"update nft metadata by nft_index",sidebar_label:"update nft metadata by nft_index",hide_title:!0,hide_table_of_contents:!0,api:{tags:["NFT"],operationId:"UpdateNftByIndex",requestBody:{description:"NFT updating request parameter.",content:{"application/json":{schema:{title:"ReqUpdateNft",required:["tx_info"],type:"object",properties:{tx_info:{type:"string"}}}}},required:!0},responses:{200:{description:"A successful response.",content:{"application/json":{schema:{title:"History",required:["ipns_id"],type:"object",properties:{code:{type:"integer",format:"int32"},message:{type:"string"},ipns_id:{type:"string"}}}}}}},"x-codegen-request-body-name":"body",description:"update nft metadata by nft_index",extensions:[{key:"x-codegen-request-body-name",value:"body"}],method:"post",path:"/api/v1/updateNftByIndex",servers:[{url:"https://testapi.zkbnbchain.org/"}],jsonRequestBodyExample:{tx_info:"string"},info:{title:"ZKBNB API Document",description:"Public APIs for zkbnb",version:"1.0"},postman:{name:"update nft metadata by nft_index",description:{type:"text/plain"},url:{path:["api","v1","updateNftByIndex"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/zkbnb/zkbnb-api-document",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Get nft next nonce",permalink:"/zkbnb-docs/docs/zkbnb/get-nft-next-nonce"},next:{title:"Get account by account's l1_address, index",permalink:"/zkbnb-docs/docs/zkbnb/get-account"}},b={},y=[{value:"update nft metadata by nft_index",id:"update-nft-metadata-by-nft_index",level:2}],f={toc:y};function x(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"update-nft-metadata-by-nft_index"},"update nft metadata by nft_index"),(0,i.kt)("p",null,"update nft metadata by nft_index"),(0,i.kt)(d.Z,{mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,i.kt)("p",null,"NFT updating request parameter."))),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!1,name:"tx_info",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))),(0,i.kt)("div",null,(0,i.kt)(s.Z,{mdxType:"ApiTabs"},(0,i.kt)(l.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"A successful response.")),(0,i.kt)("div",null,(0,i.kt)(d.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(r.Z,{mdxType:"SchemaTabs"},(0,i.kt)(l.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"ipns_id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(l.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "code": 0,\n  "message": "string",\n  "ipns_id": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}x.isMDXComponent=!0}}]);