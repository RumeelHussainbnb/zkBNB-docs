"use strict";(self.webpackChunkzkbnb_docs=self.webpackChunkzkbnb_docs||[]).push([[1971],{93416:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>u,default:()=>k,frontMatter:()=>m,metadata:()=>y,toc:()=>g});var n=a(87462),i=(a(67294),a(3905)),s=a(26389),c=a(94891),r=a(75190),o=a(47507),d=a(24310),l=a(63303),p=(a(75035),a(85162));const m={id:"get-account",title:"Get account by account's l1_address, index",description:"Get account by account's l1_address, index",sidebar_label:"Get account by account's l1_address, index",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Account"],operationId:"GetAccount",parameters:[{name:"by",in:"query",description:"The query condition type to get the account data, and it could be l1_address or account index.",required:!0,schema:{type:"string"}},{name:"value",in:"query",description:"The query condition value to get the account data, and it is specified by the 'by' parameter above.",required:!0,schema:{type:"string"}}],responses:{200:{description:"A successful response.",content:{"application/json":{schema:{title:"Account",required:["assets","index","l1_address","nonce","pk","status","total_asset_value"],type:"object",properties:{code:{type:"integer",format:"int32"},message:{type:"string"},status:{type:"integer",format:"int32"},index:{type:"integer",format:"int64"},l1_address:{type:"string"},pk:{type:"string"},nonce:{type:"integer",format:"int64"},assets:{type:"array",items:{title:"AccountAsset",required:["balance","id","name","price"],type:"object",properties:{id:{type:"integer",format:"int32"},name:{type:"string"},balance:{type:"string"},price:{type:"string"}}}},total_asset_value:{type:"string"}}}}}}},description:"Get account by account's l1_address, index",method:"get",path:"/api/v1/account",servers:[{url:"https://testapi.zkbnbchain.org/"}],info:{title:"ZKBNB API Document",description:"Public APIs for zkbnb",version:"1.0"},postman:{name:"Get account by account's l1_address, index",description:{type:"text/plain"},url:{path:["api","v1","account"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"(Required) The query condition type to get the account data, and it could be l1_address or account index.",type:"text/plain"},key:"by",value:""},{disabled:!1,description:{content:"(Required) The query condition value to get the account data, and it is specified by the 'by' parameter above.",type:"text/plain"},key:"value",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/zkbnb/zkbnb-api-document",custom_edit_url:null},u=void 0,y={unversionedId:"zkbnb/get-account",id:"zkbnb/get-account",title:"Get account by account's l1_address, index",description:"Get account by account's l1_address, index",source:"@site/docs/zkbnb/get-account.api.mdx",sourceDirName:"zkbnb",slug:"/zkbnb/get-account",permalink:"/docs/zkbnb/get-account",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-account",title:"Get account by account's l1_address, index",description:"Get account by account's l1_address, index",sidebar_label:"Get account by account's l1_address, index",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Account"],operationId:"GetAccount",parameters:[{name:"by",in:"query",description:"The query condition type to get the account data, and it could be l1_address or account index.",required:!0,schema:{type:"string"}},{name:"value",in:"query",description:"The query condition value to get the account data, and it is specified by the 'by' parameter above.",required:!0,schema:{type:"string"}}],responses:{200:{description:"A successful response.",content:{"application/json":{schema:{title:"Account",required:["assets","index","l1_address","nonce","pk","status","total_asset_value"],type:"object",properties:{code:{type:"integer",format:"int32"},message:{type:"string"},status:{type:"integer",format:"int32"},index:{type:"integer",format:"int64"},l1_address:{type:"string"},pk:{type:"string"},nonce:{type:"integer",format:"int64"},assets:{type:"array",items:{title:"AccountAsset",required:["balance","id","name","price"],type:"object",properties:{id:{type:"integer",format:"int32"},name:{type:"string"},balance:{type:"string"},price:{type:"string"}}}},total_asset_value:{type:"string"}}}}}}},description:"Get account by account's l1_address, index",method:"get",path:"/api/v1/account",servers:[{url:"https://testapi.zkbnbchain.org/"}],info:{title:"ZKBNB API Document",description:"Public APIs for zkbnb",version:"1.0"},postman:{name:"Get account by account's l1_address, index",description:{type:"text/plain"},url:{path:["api","v1","account"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"(Required) The query condition type to get the account data, and it could be l1_address or account index.",type:"text/plain"},key:"by",value:""},{disabled:!1,description:{content:"(Required) The query condition value to get the account data, and it is specified by the 'by' parameter above.",type:"text/plain"},key:"value",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/zkbnb/zkbnb-api-document",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"update nft metadata by nft_index",permalink:"/docs/zkbnb/update-nft-by-index"},next:{title:"Get accounts",permalink:"/docs/zkbnb/get-accounts"}},b={},g=[{value:"Get account by account&#39;s l1_address, index",id:"get-account-by-accounts-l1_address-index",level:2}],h={toc:g};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"get-account-by-accounts-l1_address-index"},"Get account by account's l1_address, index"),(0,i.kt)("p",null,"Get account by account's l1_address, index"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Query Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(r.Z,{className:"paramsItem",param:{name:"by",in:"query",description:"The query condition type to get the account data, and it could be l1_address or account index.",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(r.Z,{className:"paramsItem",param:{name:"value",in:"query",description:"The query condition value to get the account data, and it is specified by the 'by' parameter above.",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(s.Z,{mdxType:"ApiTabs"},(0,i.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"A successful response.")),(0,i.kt)("div",null,(0,i.kt)(c.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(d.Z,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"status",required:!0,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"index",required:!0,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"l1_address",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"pk",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"nonce",required:!0,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"assets"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(d.Z,{collapsible:!1,name:"id",required:!0,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"balance",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"price",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.kt)(d.Z,{collapsible:!1,name:"total_asset_value",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "code": 0,\n  "message": "string",\n  "status": 0,\n  "index": 0,\n  "l1_address": "string",\n  "pk": "string",\n  "nonce": 0,\n  "assets": [\n    {\n      "id": 0,\n      "name": "string",\n      "balance": "string",\n      "price": "string"\n    }\n  ],\n  "total_asset_value": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);